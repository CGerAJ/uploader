;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-card" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M898.817929 90.307795 126.500089 90.307795c-68.826552 0-124.629485 55.79577-124.629485 124.626415l0 597.202521c0 68.833715 55.802934 124.626415 124.629485 124.626415l772.317841 0c68.826552 0 124.626415-55.791677 124.626415-124.626415L1023.444345 214.934211C1023.444345 146.103566 967.645504 90.307795 898.817929 90.307795zM952.554808 789.743722c0 60.023048-48.656163 76.016301-108.679211 76.016301L179.133843 865.760023c-60.023048 0-108.679211-12.361539-108.679211-72.384587L70.454632 267.51373c0-60.026118 19.617803-108.686375 79.640852-108.686375l722.819496 0c60.023048 0 79.640852 48.659233 79.640852 108.686375L952.555831 789.743722zM530.055215 444.233594l282.285155 0 0-72.031547L530.055215 372.202047 530.055215 444.233594zM530.055215 655.92597l282.285155 0 0-70.931492L530.055215 584.994478 530.055215 655.92597zM357.520673 533.552875c18.72241-10.011005 33.080419-26.924209 39.568181-47.26856 10.903328-15.446807 17.300015-34.21015 17.300015-54.447053 0-52.752458-43.427068-95.513354-97.001241-95.513354s-97.001241 42.760896-97.001241 95.513354c0 21.739117 7.380084 41.777499 19.800975 57.831126 6.944156 18.832927 20.729114 34.43323 38.403658 43.884486-53.017494 17.266245-94.088912 68.343551-105.667621 132.414799 38.409798 20.530592 77.041654 25.252127 148.164504 25.252127 66.986647 0 106.881263-8.3072 141.959176-26.059516C451.261661 601.469708 410.320203 550.747489 357.520673 533.552875z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-dianhua" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M222.5664 24.5312c10.1568 0 20.3104 0 30.4672 0 26.0032 19.696 11.6416 79.76 15.232 121.8656 42.1088 3.5936 102.1728-10.7712 121.8656 15.232-9.824 233.9072 19.8656 507.3376-15.232 715.968-71.584-4.5824-161.8176 9.4816-220.8832-7.6192C136.3168 649.024 151.424 395.264 146.4 161.632c5.296-25.1712 60.7488-0.1824 60.9344-30.4672C209.6768 92.8832 198.5408 41.1296 222.5664 24.5312z"  ></path>' +
    '' +
    '<path d="M999.4688 306.3488c0 218.3456 0 436.688 0 655.0336-10.832 14.5632-23.5232 27.2576-38.0832 38.0864-299.5872 0-599.1776 0-898.768 0-14.56-10.832-27.2544-23.5264-38.0832-38.0864 0-218.3424 0-436.688 0-655.0336 16.0256-16.9792 25.3536-40.6592 60.9344-38.0832 0 99.2288 0 198.3776 0 312.2848 0 95.7184-25.872 245.168 7.616 312.2816 27.2 54.4992 245.6224 70.6048 312.2848 38.08 110.432-53.8688 5.1456-544.7328 53.3152-662.6496C624.3456 287.2992 926.08 226.592 999.4688 306.3488zM580.5504 390.1312c-34.6912 5.7056-26.0704 87.536-15.2352 114.2496 89.4208 12.6112 230.48 12.6112 319.9008 0 12.0864-21.5296 12.0864-85.104 0-106.6336C798.5248 380.3424 679.84 394.9344 580.5504 390.1312zM649.1008 595.7824c-7.5072-48.8192-46.0768-36.7072-60.9344-30.4672C481.2 610.2688 665.4112 701.9264 649.1008 595.7824zM770.9664 595.7824c-7.504-48.8192-46.0768-36.7072-60.9312-30.4672C603.0656 610.2688 787.2768 701.9264 770.9664 595.7824zM892.8352 595.7824c-7.5072-48.8192-46.08-36.7072-60.9344-30.4672C724.9312 610.2688 909.1456 701.9264 892.8352 595.7824zM649.1008 717.6512c-7.5072-48.8192-46.0768-36.7072-60.9344-30.4672C481.2 732.1376 665.4112 823.7952 649.1008 717.6512zM770.9664 717.6512c-7.504-48.8192-46.0768-36.7072-60.9312-30.4672C603.0656 732.1376 787.2768 823.7952 770.9664 717.6512zM892.8352 717.6512c-7.5072-48.8192-46.08-36.7072-60.9344-30.4672C724.9312 732.1376 909.1456 823.7952 892.8352 717.6512zM649.1008 839.5136c-7.5072-48.8128-46.0768-36.7072-60.9344-30.464C481.2 854.0064 665.4112 945.6576 649.1008 839.5136zM770.9664 839.5136c-7.504-48.8128-46.0768-36.7072-60.9312-30.464C603.0656 854.0064 787.2768 945.6576 770.9664 839.5136zM892.8352 839.5136c-7.5072-48.8128-46.08-36.7072-60.9344-30.464C724.9312 854.0064 909.1456 945.6576 892.8352 839.5136z"  ></path>' +
    '' +
    '<path d="M24.5344 961.3824c10.8288 14.5632 23.5232 27.2576 38.0832 38.0864-12.6912 0-25.3888 0-38.0832 0C24.5344 986.768 24.5344 974.08 24.5344 961.3824z"  ></path>' +
    '' +
    '<path d="M999.4688 961.3824c0 12.7008 0 25.3888 0 38.0864-12.7008 0-25.3888 0-38.0832 0C975.9456 988.6368 988.6368 975.9424 999.4688 961.3824z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-iconsuo" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M500.906667 629.333333C507.733333 633.173333 512 640.426667 512 648.106667l0 59.114667L512 648.106667c0-7.68 4.266667-14.933333 11.093333-18.773333 10.24-5.546667 20.48-16 20.48-27.285333 0-17.301333-14.08-31.573333-31.573333-31.573333s-31.573333 14.293333-31.573333 31.573333C480.426667 613.333333 490.666667 623.786667 500.906667 629.333333zM512 527.786667c40.96 0 70.4 33.28 70.4 74.24 0 22.378667-10.432 43.498667-27.733333 57.365333l0 76.586667c0 11.733333-9.6 21.333333-21.333333 21.333333l-42.666667 0c-11.733333 0-21.333333-9.6-21.333333-21.333333l0-76.586667c-17.28-13.866667-27.733333-35.008-27.733333-57.365333C441.6 561.066667 471.04 527.786667 512 527.786667zM704.618667 320.213333c-1.045333-98.773333-103.466667-181.546667-202.666667-181.546667-99.626667 0-181.12 80.618667-181.973333 179.84l0 54.826667 384 0C704 351.786667 704.618667 321.493333 704.618667 320.213333zM213.333333 821.333333c0 35.413333 28.586667 64 64 64l469.333333 0c35.413333 0 64-28.586667 64-64l0-341.333333c0-35.413333-28.586667-64-64-64L277.333333 416c-35.413333 0-64 28.586667-64 64L213.333333 821.333333zM277.333333 928c-47.146667 0-106.666667-59.52-106.666667-106.666667l0-341.333333c0-47.146667 59.52-106.666667 106.666667-106.666667l0-55.04C278.4 195.626667 379.093333 96 501.973333 96c122.453333 0 243.413333 99.008 244.693333 221.226667l0 53.546667 0 2.56c47.146667 0 106.666667 59.52 106.666667 106.666667l0 341.333333c0 47.146667-59.52 106.666667-106.666667 106.666667L277.333333 928z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-iconfontyonghu" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M961.791009 970.283181c0 11.316556-2.830103 10.476008-1.747929 33.530679 0 25.14319-30.739133 22.002058-30.739133 0l0-33.530679c0-201.658329-244.017335-333.875031-348.128365-368.811765 106.12886-32.131051 216.08517-165.6587 216.08517-301.769685 0-134.541705-115.576674-268.23258-285.292883-268.23258-169.72135 0-283.15681 131.969936-283.15681 268.239006 0 134.694649 110.449843 267.465291 213.961951 301.758118C341.625747 633.96362 94.626651 770.377923 94.626651 970.283181l0 33.530679c0 22.002058-32.488348 31.430594-32.488348 0l0-33.530679c0-173.087399 153.186711-312.028487 311.425709-368.818191-99.459739-60.257287-175.134789-185.478417-175.134789-301.764544C198.429222 133.048254 339.976782 0 511.97301 0c171.991087 0 315.650299 133.048254 315.650299 299.701731 0 116.284842-77.782847 241.507258-177.241301 301.764544C808.624862 658.254694 961.791009 797.197068 961.791009 970.283181L961.791009 970.283181 961.791009 970.283181zM961.791009 970.283181"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-shiled" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M512 991.741c-453.33-156.299-397.433-541.141-397.433-809.785 164.618 0 290.752-46.77 397.433-149.956 106.649 103.185 232.815 149.956 397.465 149.956 0 268.677 55.865 653.486-397.465 809.785zM878.327 262.905c-0.323-16.798-0.615-33.337-0.842-49.522-147.657-5.502-265.149-49.78-365.486-137.753-100.337 87.973-217.829 132.251-365.486 137.753-0.194 16.183-0.518 32.722-0.842 49.553-5.049 262.366-10.714 559.428 366.329 694.883 377.074-135.456 371.377-432.517 366.327-694.915zM528.087 645.578h-32.172v-111.957h-112.572v-32.011h112.572v-111.957h32.172v111.957h112.572v32.011h-112.572v111.957z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-x-copy" viewBox="0 0 1032 1024">' +
    '' +
    '<path d="M510.952547 0c-282.190917 0-510.952547 228.761631-510.952547 510.952547 0 282.19296 228.761631 510.952547 510.952547 510.952547 282.19296 0 510.952547-228.759587 510.952547-510.952547C1021.905095 228.761631 793.143464 0 510.952547 0zM730.067394 663.829549c18.292101 18.292101 18.292101 47.947787 0 66.239888-18.292101 18.292101-47.947787 18.292101-66.239888 0l-152.877002-152.877002-152.877002 152.877002c-18.292101 18.292101-47.947787 18.292101-66.239888 0-18.292101-18.292101-18.292101-47.947787 0-66.239888l152.877002-152.877002-152.877002-152.877002c-18.292101-18.292101-18.292101-47.947787 0-66.239888 18.292101-18.292101 47.947787-18.292101 66.239888 0l152.877002 152.877002 152.877002-152.877002c18.292101-18.292101 47.947787-18.292101 66.239888 0 18.292101 18.292101 18.292101 47.947787 0 66.239888l-152.877002 152.877002L730.067394 663.829549z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)